
package Server;


import java.io.*;
import java.util.*;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class loaderClass extends java.lang.ClassLoader {
	String host;
	int port;
        Hashtable cache;

public loaderClass() {
        cache = new Hashtable();
}

public synchronized Class loadClass(String name) throws ClassNotFoundException {
        try {
                return loadClass(name, true);
        } catch (ClassNotFoundException ce) {
                throw (ce);
        }
}

public synchronized Class loadClass(String name, boolean resolve) throws ClassNotFoundException {
        File fbot;

        Class c = (Class) cache.get(name);
        if (c == null) {

                java.io.FileInputStream fisbot;
//                System.out.println("loadClass says: " + name);
		fbot = new java.io.File(name);
		byte[] bytearr = new byte[(int) fbot.length()];
//                System.out.println(Integer.toString( (int) fbot.length() ) +
//                                "\n" + bytearr);
	
                try {
                        fisbot = new java.io.FileInputStream(fbot);
                        try {
                                fisbot.read(bytearr, 0, (int) fbot.length());
                        } catch (java.io.IOException e) {
//                                System.out.println("File I/O Error\n");
                                throw(new ClassNotFoundException());
                        }
                } catch (java.io.FileNotFoundException e) {
//                        System.out.print("File not found - checking System... ");
                        try {
                                c = super.findSystemClass(name);
//                                System.out.print("Found: " + name + "\n");
                                cache.put(name, c);
                                if (resolve)
                                        super.resolveClass(c);
//                                System.out.println(name + " resolved.");
                                Class testc = (Class) cache.get(name);
                                if (testc != null) {
//                                        System.out.println(name + ": Cached");
                                } else {
//                                        System.out.println(name + ": Caching failed.");
                                }
                                return c;
                        } catch (ClassNotFoundException ce) {
//                                System.out.println("Not found: " + name);
                        }
                }
		c = super.defineClass(null, bytearr, 0, (int) fbot.length());
//                System.out.println(name + " defined.");
		cache.put(name, c);
		Class testc = (Class) cache.get(name);
		if (testc != null) {
//                        System.out.println(name + ": Cached");
		} else {
//                        System.out.println(name + ": Caching failed.");
		}
        } else { /* if (c == null) */
                System.out.println(name + " is already cached.");
        }
        if (resolve) {
                super.resolveClass(c);
//                System.out.println(name + " resolved.");
        }
        return c;
}

}
